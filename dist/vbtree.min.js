var vbtree=function(r){var n={};function t(e){if(n[e])return n[e].exports;var i=n[e]={i:e,l:!1,exports:{}};return r[e].call(i.exports,i,i.exports,t),i.l=!0,i.exports}return t.m=r,t.c=n,t.d=function(r,n,e){t.o(r,n)||Object.defineProperty(r,n,{enumerable:!0,get:e})},t.r=function(r){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0})},t.t=function(r,n){if(1&n&&(r=t(r)),8&n)return r;if(4&n&&"object"==typeof r&&r&&r.__esModule)return r;var e=Object.create(null);if(t.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:r}),2&n&&"string"!=typeof r)for(var i in r)t.d(e,i,function(n){return r[n]}.bind(null,i));return e},t.n=function(r){var n=r&&r.__esModule?function(){return r.default}:function(){return r};return t.d(n,"a",n),n},t.o=function(r,n){return Object.prototype.hasOwnProperty.call(r,n)},t.p="",t(t.s=1)}([function(r,n){r.exports=faker},function(r,n,t){"use strict";t.r(n),t.d(n,"array_index",(function(){return e})),t.d(n,"array_permutations",(function(){return i})),t.d(n,"tree_ancestors",(function(){return l})),t.d(n,"tree_common_ancestor",(function(){return s})),t.d(n,"tree_descendants",(function(){return v})),t.d(n,"tree_diff",(function(){return h})),t.d(n,"tree_find_shifts",(function(){return y})),t.d(n,"tree_finder_make",(function(){return S})),t.d(n,"tree_from_array",(function(){return c})),t.d(n,"tree_from_string",(function(){return E})),t.d(n,"tree_from_string2",(function(){return j})),t.d(n,"tree_insert",(function(){return M})),t.d(n,"tree_intersect",(function(){return I})),t.d(n,"tree_map_orig",(function(){return o})),t.d(n,"tree_move",(function(){return D})),t.d(n,"tree_move_after",(function(){return U})),t.d(n,"tree_move_before",(function(){return L})),t.d(n,"tree_move_into",(function(){return X})),t.d(n,"tree_move_v2",(function(){return z})),t.d(n,"tree_pointer_shift",(function(){return w})),t.d(n,"tree_print2",(function(){return G})),t.d(n,"tree_random",(function(){return R})),t.d(n,"tree_resolve",(function(){return W})),t.d(n,"tree_roots_flatten",(function(){return Y})),t.d(n,"tree_shift",(function(){return Z})),t.d(n,"tree_sort_preorder",(function(){return nr})),t.d(n,"tree_walk_preorder",(function(){return u})),t.d(n,"tree_walk_preorder_prefix",(function(){return B})),t.d(n,"tree_walk_preorder_rev",(function(){return er}));var e=function(r,n){var t={};return r.forEach((function(r){return t[n(r)]=r})),t};var i=function(r){for(var n=r.length,t=[r.slice()],e=new Array(n).fill(0),i=1;i<n;)if(e[i]<i){var o=i%2&&e[i],a=r[i];r[i]=r[o],r[o]=a,++e[i],i=1,t.push(r.slice())}else e[i]=0,++i;return t};var o=function(r){return{id:r.id,parent_id:r.parent_id,orig:r}};function a(r){var n=!0,t=!0,e=!1;if(r.stack.push(r.node),"function"==typeof r.enter)switch(r.enter_retval=r.enter(r),r.enter_retval){case"END":n=!1,t=!1,e=!0;break;case"SKIP":n=!1,t=!1}if(n&&"function"==typeof r.visit)switch(r.visit_retval=r.visit(r),r.visit_retval){case"END":t=!1,e=!0;break;case"SKIP":t=!1}if(t)for(var i=r.node.children,o=0,u=i.length;o<u;++o)if(r.node=i[o],a(r)){e=!0;break}return r.node=r.stack.pop(),"function"==typeof r.leave&&(r.leave_retval=r.leave(r),"END"==r.leave_retval&&(e=!0)),e}var u=function(r){r.stack=r.stack||[];for(var n=0,t=r.roots.length;n<t&&(r.node=r.roots[n],!a(r));++n);return r.retval};function f(r){for(var n=[r.id],t=r;t;t=t.parent)if(n.push(t.parent_id),t.parent===r)throw new Error("Circular dependency detected: ".concat(n.join(" -> ")))}var c=function(){for(var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=[],t=[],e={},i=0,o=r.length;i<o;++i){var a=r[i];if(a.parent_id=a.parent_id||null,a.children=[],e[a.id])throw new Error("All rows should have unique ids");e[a.id]=a,a.parent=e[a.parent_id]||null,a.parent?(a.parent===a&&f(a),a.parent.children.push(a),a.siblings=a.parent.children):t.push(a)}for(var u={},c=0,l=t.length;c<l;++c){var d=t[c];if(d.parent=e[d.parent_id]||null,d.parent){u[d.parent_id]=u[d.parent_id]+1||0,d.parent.children.splice(u[d.parent_id],0,d),d.siblings=d.parent.children;for(var p=d;p;p=p.parent)p.parent===d&&f(d)}else n.push(d),d.siblings=n}return{roots:n,nodes:r,nodes_map:e}};var l=function(r,n){for(var t=[],e=c(r.map(o)).nodes_map[n.parent_id];e;e=e.parent)t.push(e.orig);return t};function d(r){return function(r){if(Array.isArray(r))return p(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,n){if(!r)return;if("string"==typeof r)return p(r,n);var t=Object.prototype.toString.call(r).slice(8,-1);"Object"===t&&r.constructor&&(t=r.constructor.name);if("Map"===t||"Set"===t)return Array.from(r);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return p(r,n)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function p(r,n){(null==n||n>r.length)&&(n=r.length);for(var t=0,e=new Array(n);t<n;t++)e[t]=r[t];return e}var s=function(r){if(0==r.length)return null;var n=[];r.forEach((function(r){for(var t=[],e=r;e;e=e.parent)t.push(e);n.push(t.reverse())}));for(var t=Math.min.apply(Math,d(Object.values(n).map((function(r){return r.length})))),e=0;e<t;++e)for(var i=1;i<n.length;++i)if(n[i-1][e]!==n[i][e])return n[0][e-1];return n[0][t-2]||null};var v=function(r,n){var t=0,i=[],a=e(n,(function(r){return r.id}));return u({roots:c(r.map(o)).roots,leave:function(r){var n=r.node;a[n.id]&&t--},visit:function(r){var n=r.node;t&&i.push(n.orig),a[n.id]&&t++}}),i};var h=function(r,n){var t=[],i=e(n,(function(r){return r.id}));return u({roots:c(r.map(o)).roots,visit:function(r){var n=r.node;i[n.parent_id]&&(i[n.id]=!0),i[n.id]||t.push(n.orig)}}),t};function _(r,n){var t=r.indexOf(n);if(-1==t)return!1;for(var e=t,i=r.length;++e<i;)if(r[e].parent_id===n.parent_id)return!1;var o=r.findIndex((function(r){return r.id==n.parent_id}));return-1!=o&&(n.parent_id=r[o].parent_id,r.splice(t,1),r.splice(o+1-(t<o),0,n),!0)}function m(r,n){for(var t=r.indexOf(n),e=t;--e>=0;)if(r[e].parent_id===n.parent_id){for(var i=r[e],o=r.length;--o>0&&r[o].parent_id!==i.id;);return 0==o&&(o=e),n.parent_id=i.id,r.splice(t,1),r.splice(o+1-(t<o),0,n),!0}return!1}var y=function(r,n){var t={id:"__tree_find_shifts__:dummy1",parent_id:n.parent_id},e={id:"__tree_find_shifts__:dummy2",parent_id:n.parent_id},i=r.slice(),o=r.slice();i.splice(n.i,0,t),o.splice(n.i,0,e);for(var a=[];_(i,t);)a.push({i:i.indexOf(t),parent_id:t.parent_id||null});for(var u=[];m(o,e);)u.push({i:o.indexOf(e),parent_id:e.parent_id||null});return{shift_left:a,shift_right:u}};function b(r,n,t,e,i,o){for(var a=0,u={i:n,parent_id:t,shift_happened:a};e>0;){for(var f=n;--f>=0;){var c=r[f];if(c.parent_id==t){t=c.id;for(var l=r.length;--l>=0;)if(r[l].parent_id==t){n=l+1;break}--e,++a,i(f,r)&&(u.i=n,u.parent_id=t,u.shift_happened=a);break}}if(-1==f)break}return u}function g(r,n,t,e,i,o){for(var a=0,u={i:n,parent_id:t,shift_happened:a};e<0;){for(var f=n,c=r.length;f<c;++f){var l=r[f];if(l.parent_id==t&&!o[l.id])return u}for(var d=null,p=0,s=r.length;p<s;++p)if(r[p].id==t){d=p;break}if(null===d)break;++e,--a,n=d+1,t=r[d].parent_id,i(r.indexOf((function(r){return r.id==t})),r)&&(u.i=n,u.parent_id=t,u.shift_happened=a)}return u}var w=function(r,n,t,e){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:function(){return!0},o=t==r.length?null:r[t].parent_id;return e<0?g(r,t,o,e,i,n):b(r,t,o,e,i)};function A(r,n,t){var e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r.container_rect;if(null===r.i){var i=O(r.node_rects,t);r.x0=n,r.y0=t,r.xx0=r.node_rects[i.i].x,r.container_rect0=e}r.dx=n-r.x0,r.dy=t-r.y0,r.container_rect=e;var o=r.container_rect0.x-r.container_rect.x,a=r.container_rect0.y-r.container_rect.y;n+=o,t+=a;var u=x(r.node_rects.map((function(r){return r.y})).concat(r.container_rect0.y+r.container_rect.h),t);console.log("closest_i",u);var f=r.node_rects[u]||{x:(r.node_rects[k(r.node_rects.map((function(r){return r.y})))]||r.container_rect0).x,y:r.container_rect0.y+r.container_rect.h,w:r.container_rect0.w,h:0,node:null},c=r.nodes.indexOf(f.node),l=Math.round((r.xx0-f.x+r.dx)/r.shift_width),d=-1==c?r.nodes.length:c,p=w(r.nodes,r.selection_map,d,l,r.is_shift_allowed);return r.i=p.i,r.parent_id=p.parent_id,r.shift=p.shift_happened,{x:f.x+r.shift*r.shift_width-o,y:f.y-a,w:f.w-r.shift*r.shift_width,h:f.h,before:!0,shift:r.shift,node:r.nodes[c]||null,i:r.i,parent_id:r.parent_id}}function k(r){for(var n=Number.MAX_VALUE,t=0,e=0,i=r.length;e<i;++e){var o=r[0];n>o&&(n=o,t=e)}return t}function x(r,n){for(var t=Number.MAX_VALUE,e=0,i=0,o=r.length;i<o;++i){var a=Math.abs(n-r[i]);t>a&&(t=a,e=i)}return e}function O(r,n){for(var t=null,e=null,i=0,o=r.length;i<o;++i){var a=r[i],u=a.y,f=a.y+a.h;if(n>=u&&n<f){var c=n-u,l=f-n;if(null===t){t=c<=l?{i:i,r:a,d1:c,d2:l,top:!0,bottom:!1}:{i:i,r:a,d1:c,d2:l,top:!1,bottom:!0};continue}if(c<=l){if(t.top&&t.d1>c){t={i:i,r:a,d1:c,d2:l,top:!0,bottom:!1};continue}if(t.bottom&&t.d2>c){t={i:i,r:a,d1:c,d2:l,top:!0,bottom:!1};continue}}else{if(t.top&&t.d1>l){t={i:i,r:a,d1:c,d2:l,top:!1,bottom:!0};continue}if(t.bottom&&t.d2>l){t={i:i,r:a,d1:c,d2:l,top:!1,bottom:!0};continue}}}else if(null===t){var d=Math.abs(u-n),p=Math.abs(f-n);if(null!==e)if(d<=p){if(e.top&&e.d1>d){e={i:i,r:a,d1:d,d2:p,top:!0,bottom:!1};continue}e.bottom&&e.d2>d&&(e={i:i,r:a,d1:d,d2:p,top:!0,bottom:!1})}else{if(e.top&&e.d1>p){e={i:i,r:a,d1:d,d2:p,top:!1,bottom:!0};continue}e.bottom&&e.d2>p&&(e={i:i,r:a,d1:d,d2:p,top:!1,bottom:!0})}else e=d<=p?{i:i,r:a,d1:d,d2:p,top:!0,bottom:!1}:{i:i,r:a,d1:d,d2:p,top:!1,bottom:!0}}}return t||e}var S=function(r){return r.selection_map=e(r.selection,(function(r){return r.id})),r.i=null,r.parent_id=null,r.shift_width=r.shift_width||50,r.update=function(){for(var n=arguments.length,t=new Array(n),e=0;e<n;e++)t[e]=arguments[e];return A.apply(void 0,[r].concat(t))},r};var E=function(r){var n={id:null,level:0,parent:null,children:[]},t=[n];for(r.split("\n").forEach((function(r){var n=r.trimLeft(),e=r.length-n.length;if(""!=n){for(;t.length>1&&t[0].level>=e;)t[0].level=t.length-1,t[0].parent=t[1],t.shift();var i;n.split(",").forEach((function(r){i={id:r,level:t.length-1,parent:t[0],children:[]},t[0].children.push(i)})),i.level=e,t.unshift(i)}}));t.length>0;)t[0].level=t.length-1,t.shift();return n};var j=function(r){var n={id:null,parent_id:null,level:0,parent:null,children:[]},t=[n];for(r.split("\n").forEach((function(r){var n=r.trimLeft(),e=r.length-n.length;if(""!=n){for(;t.length>1&&t[0].level>=e;)t[0].level=t.length-1,t[0].parent=t[1],t.shift();var i;n.split(",").forEach((function(r){i={id:r,parent_id:t[0].id,text:r,level:t.length-1,parent:t[0],children:[]},t[0].children.push(i)})),i.level=e,t.unshift(i)}}));t.length>0;)t[0].level=t.length-1,t.shift();return n.children};var M=function(r,n,t,e){var i=[];return u({roots:c(n.map(o)).roots,visit:function(r){var n=r.node;1==r.stack.length&&(n.orig.parent_id=e),i.push(n.orig)}}),r.splice.apply(r,[t,0].concat(i)),r};var I=function(r,n){var t=[],i=e(n,(function(r){return r.id}));return u({roots:c(r.map(o)).roots,visit:function(r){var n=r.node;i[n.parent_id]&&(i[n.id]=!0),i[n.id]&&t.push(n.orig)}}),t};function N(r){return function(r){if(Array.isArray(r))return P(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,n){if(!r)return;if("string"==typeof r)return P(r,n);var t=Object.prototype.toString.call(r).slice(8,-1);"Object"===t&&r.constructor&&(t=r.constructor.name);if("Map"===t||"Set"===t)return Array.from(r);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return P(r,n)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function P(r,n){(null==n||n>r.length)&&(n=r.length);for(var t=0,e=new Array(n);t<n;t++)e[t]=r[t];return e}var D=function(r,n,t,i){var o=I(r,n),a=e(o,(function(r){return r.id}));if(!a[i]){var u=[];n.forEach((function(r){return r.parent_id=i}));for(var f=0,c=0;c<r.length;++c){var l=r[c];a[l.id]?c<t&&f++:u.push(l)}u.splice.apply(u,[t-f,0].concat(N(o))),r.splice.apply(r,[0,r.length].concat(u))}return r};function C(r){return function(r){if(Array.isArray(r))return T(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,n){if(!r)return;if("string"==typeof r)return T(r,n);var t=Object.prototype.toString.call(r).slice(8,-1);"Object"===t&&r.constructor&&(t=r.constructor.name);if("Map"===t||"Set"===t)return Array.from(r);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return T(r,n)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function T(r,n){(null==n||n>r.length)&&(n=r.length);for(var t=0,e=new Array(n);t<n;t++)e[t]=r[t];return e}var U=function(r,n){var t;r.forEach((function(r){r.parent&&(r.parent.children.splice(r.parent.children.indexOf(r),1),r.parent=null,r.parent_id=null)}));var e=n.parent.children.indexOf(n);(t=n.parent.children).splice.apply(t,[e+1,0].concat(C(r))),r.forEach((function(r){r.parent=n.parent,r.parent_id=n.parent_id}))};function $(r){return function(r){if(Array.isArray(r))return K(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,n){if(!r)return;if("string"==typeof r)return K(r,n);var t=Object.prototype.toString.call(r).slice(8,-1);"Object"===t&&r.constructor&&(t=r.constructor.name);if("Map"===t||"Set"===t)return Array.from(r);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return K(r,n)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function K(r,n){(null==n||n>r.length)&&(n=r.length);for(var t=0,e=new Array(n);t<n;t++)e[t]=r[t];return e}var L=function(r,n){var t;r.forEach((function(r){r.parent&&(r.parent.children.splice(r.parent.children.indexOf(r),1),r.parent=null,r.parent_id=null)}));var e=n.parent.children.indexOf(n);(t=n.parent.children).splice.apply(t,[e,0].concat($(r))),r.forEach((function(r){r.parent=n.parent,r.parent_id=n.parent_id}))};function q(r){return function(r){if(Array.isArray(r))return V(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,n){if(!r)return;if("string"==typeof r)return V(r,n);var t=Object.prototype.toString.call(r).slice(8,-1);"Object"===t&&r.constructor&&(t=r.constructor.name);if("Map"===t||"Set"===t)return Array.from(r);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return V(r,n)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function V(r,n){(null==n||n>r.length)&&(n=r.length);for(var t=0,e=new Array(n);t<n;t++)e[t]=r[t];return e}var X=function(r,n){var t;r.forEach((function(r){r.parent&&(r.parent.children.splice(r.parent.children.indexOf(r),1),r.parent=null,r.parent_id=null)})),(t=n.children).splice.apply(t,[0,0].concat(q(r))),r.forEach((function(r){r.parent=n,r.parent_id=n.id}))};var z=function(r,n,t){};var B=function(r){return r.stack.map((function(n,t){var e=n.parent?n.parent.children:r.roots,i=t==r.stack.length-1;return n===e[e.length-1]?i?"└":" ":i?"├":"│"}))},F={"├":"├── ","│":"│   ","└":"└── "," ":"    "};var G=function(r){var n=r.roots;return u({retval:"",roots:n,visit:function(r){r.retval+=B(r).map((function(r){return F[r]})).join("")+(r.node.title||r.node.id)+"\n"}})},H=t(0),J=t.n(H);function Q(r,n,t){for(var e=[],i=0,o=Math.floor(5*Math.random())+1;i<o;++i){for(var a=void 0,u=0;u<50&&t[a=J.a.lorem.word()];++u);if(t[a])throw new Error("No more unique words");t[a]=!0,e.push(" ".repeat(4*r)+a),r<n&&e.push(Q(r+1,n,t))}return e.join("\n")}var R=function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:3,n={};return Q(1,r,n)};var W=function(r,n,t,i){var o=!1,a=null,f={i:0,parent_id:null},l=e(r,(function(r){return r.id})),d=c(r.map((function(r,n){return{id:r.id,parent_id:l[r.parent_id]?r.parent_id:null,value:r,i:n}}))).roots;if(u({roots:d,visit:function(r){if(o)return f.i=r.node.i,a==r.node.parent_id&&(f.parent_id=r.node.parent_id),"END";if(r.node.id==n.id){if(a=r.node.id,!t)return f.i=r.node.i,f.parent_id=r.node.parent_id,"END";f.i=r.node.i+1,f.parent_id=r.node.parent_id,o=!0}}}),i>0){var p=y(r,f);return p.shift_right[Math.min(i,p.shift_right.length)-1]||f}if(i<0){var s=y(r,f);return s.shift_left[Math.min(-i,s.shift_left.length)-1]||f}return f};var Y=function(r){return u({roots:r,retval:[],enter:function(r){var n=r.node;r.retval.push(n)},leave:function(r){var n=r.node;delete n.parent,delete n.children,delete n.siblings}})};var Z=function(r,n,t){var e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:function(){return!0};if(0==r.length)return{i:n,parent_id:null,shift_real:0};for(var i=0,o=n==r.length?null:r[n].parent_id,a=n;t>0;){for(var u=a;--u>=0;)if(r[u].parent_id==o){if(!e(u,r)){u=-1;break}o=r[u].id;for(var f=r.length;--f>=0;)if(r[f].parent_id==o){a=f+1;break}--t,++i;break}if(-1==u)break}for(;t<0;){for(var c=!1,l=a;++l<r.length;)if(r[l].parent_id==o){c=!0;break}if(c)break;c=!0;for(var d=0;d<r.length;++d)if(r[d].id==o){if(++t,--i,d<a){o=r[d].parent_id;for(var p=d;++p<a;)if(r[p].parent_id==o){a=p;break}c=!1;break}a=d+1,o=r[d].parent_id,c=!1;break}if(c)break}return{i:a,parent_id:o,shift_real:i}};function rr(r,n){return r.id.localeCompare(n.id)}var nr=function r(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:rr;return n.sort(t).forEach((function(n){return r(n.children,t)})),n};function tr(r){var n=!0,t=!0,e=!1;if(r.stack.push(r.node),"function"==typeof r.enter)switch(r.enter_retval=r.enter(r),r.enter_retval){case"END":n=!1,t=!1,e=!0;break;case"SKIP":n=!1,t=!1}if(n&&"function"==typeof r.visit)switch(r.visit_retval=r.visit(r),r.visit_retval){case"END":t=!1,e=!0;break;case"SKIP":t=!1}if(t)for(var i=r.node.children,o=i.length;o-- >0;)if(r.node=i[o],tr(r)){e=!0;break}return r.node=r.stack.pop(),"function"==typeof r.leave&&(r.leave_retval=r.leave(r),"END"==r.leave_retval&&(e=!0)),e}var er=function(r){r.stack=r.stack||[];for(var n=r.roots.length;n-- >0&&(r.node=r.roots[n],!tr(r)););return r.retval}}]);